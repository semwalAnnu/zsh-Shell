#include "execute.h"
#include "msgs.h"

int check_internal_command(int argc, char **argv) {

  char *command = argv[0];
  if (strcmp(command, "exit") == 0) {
    if (argc <= 1) {
      // printf("exiting\n");
      clean_zombies();
      exit(0);
      // printf("exited");
    } else {
      const char *msg = FORMAT_MSG("exit", TMA_MSG);
      write(STDERR_FILENO, msg, strlen(msg));
    }
    return 1;
  } else if (strcmp(command, "pwd") == 0) {
    if (argc <= 1) {

      char cwd[1024];
      if (getcwd(cwd, sizeof(cwd)) != NULL) {
        write(STDOUT_FILENO, cwd, strlen(cwd));
        write(STDOUT_FILENO, "\n", 1);
      } else {
        const char *msg = FORMAT_MSG("pwd", GETCWD_ERROR_MSG);
        write(STDERR_FILENO, msg, strlen(msg));
      }
    } else {
      const char *msg = FORMAT_MSG("pwd", TMA_MSG);
      write(STDERR_FILENO, msg, strlen(msg));
    }

    return 1;
  } else if(strcmp(command, "cd") ==0){
    
    if(argc <= 2){
      char *dir = argv[1];
      if(chdir(dir) != 0){
        const char *msg = FORMAT_MSG("cd", CHDIR_ERROR_MSG);
        write(STDERR_FILENO, msg, strlen(msg));
      }
    } else {
        const char *msg = FORMAT_MSG("cd", TMA_MSG);
        write(STDERR_FILENO, msg, strlen(msg));
 
    }
    return 1;
  }


  return 0;
}
